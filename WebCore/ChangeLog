2007-06-19  Timothy Hatcher  <timothy@apple.com>

        Merge r23602 and r23607 from Safari-2-0-branch to Safari-1-3-branch

        <rdar://problem/5279863> Panther: Memory corruption in Apple Safari: WebKit (Rhys #2)

        * khtml/rendering/render_frames.cpp:
        (RenderFrameSet::layout):
        (RenderFrameSet::isChildAllowed):
        * khtml/rendering/render_frames.h:
        (khtml::RenderFrame::isFrame):
        * khtml/rendering/render_object.h:
        (khtml::RenderObject::isFrame):

2007-06-19  Timothy Hatcher  <timothy@apple.com>

        Merged fix from Safari-2-0-branch to Safari-1-3-branch

  2007-06-05  Anders Carlsson  <andersca@apple.com>

        Reviewed by Geoff.

        <rdar://problem/5245555> REGRESSION: HTTP header injection in XMLHttpRequest.setRequestHeader
        <rdar://problem/5246208> HTTP injection in XMLHttpRequest.open method parameter
        <rdar://problem/5246242> HTTP header injection in HXMLHttpRequest.setRequestHeader header parameter

        Check method names, header names and header values and throw exceptions if any of them are
        invalid. This is what the new XMLHttpRequest spec states that we should do.

        * khtml/ecma/xmlhttprequest.cpp:
        (KJS::isValidToken):
        (KJS::isValidHeaderValue):
        (KJS::XMLHttpRequestProtoFunc::tryCall):

=== WebCore-315.14.6 ===

2006-08-15  Timothy Hatcher  <timothy@apple.com>

        Merged fix from Safari-2-0-branch to Safari-1-3-branch

    2006-08-15  Geoffrey Garen  <ggaren@apple.com>

        Merged fix from TOT to Safari-2-0-branch
        
        This fixes <rdar://problem/4661982> (crash in KHTMLParser::popBlock).
        
        - This patch reworks a previous fix for <rdar://problem/3524912> repro 
        crash in KHTMLParser::parseToken, due to parser's current element being 
        destroyed (www.gnnetcom.dk), along with subsequent adjustments to fix
        leaks.
        
        The previous solutions caused a ~2% performance regression on iBench HTML,
        due to RefPtr churn. The optimizations here gain back that ~2% plus ~1% more,
        for a total win of ~3% vs current TOT.
        
        The solution here is:
        (1) Don't let the parser ref document nodes -- that causes leaks.
        (2) Handle ref/deref manually, to avoid RefPtr churn. Specifically, when 
        moving a node between stacks or to/from 'current', rather than deref'ing
        and then ref'ing again, simply move the node, along with its refcount, to
        its new location, and overwrite its old location.
 
        * WebCore.xcodeproj/project.pbxproj:
        * html/HTMLParser.cpp:
        (WebCore::HTMLStackElem::HTMLStackElem):
        (WebCore::HTMLStackElem::derefNode):
        (WebCore::HTMLParser::HTMLParser):
        (WebCore::HTMLParser::setCurrent):
        (WebCore::HTMLParser::insertNode):
        (WebCore::HTMLParser::popNestedHeaderTag):
        (WebCore::HTMLParser::handleResidualStyleCloseTagAcrossBlocks):
        (WebCore::HTMLParser::reopenResidualStyleTags):
        (WebCore::HTMLParser::pushBlock):
        (WebCore::HTMLParser::popBlock):
        (WebCore::HTMLParser::popOneBlockCommon):
        (WebCore::HTMLParser::popOneBlock):
        (WebCore::HTMLParser::moveOneBlockToStack):
        * html/HTMLParser.h:


2006-08-14  Timothy Hatcher  <timothy@apple.com>

        Merged fix from Safari-2-0-branch to Safari-1-3-branch

    2006-08-04  Beth Dakin  <bdakin@apple.com>

        Reviewed by me/Hyatt.

        Mostly this is merging over Hyatt's fix with r15801. Some other 
        things needed to be tweaked though. This is a better fix for 
        <rdar://problem/4541255> Safari hangs at http://www.kutilek.de/
        safari-test/ somewhere from 
        WebCore::RenderBlock::layoutInlineChildren(bool)

        * khtml/rendering/render_box.cpp:
        (RenderBox::deleteLineBoxWrapper): Call remove.
        * khtml/rendering/render_box.h:
        * khtml/rendering/render_list.cpp: 
        (RenderListItem::updateMarkerLocation): Call remove.
        * khtml/rendering/render_list.h:
        (khtml::ListMarkerBox:::InlineBox):
        * khtml/rendering/render_object.cpp: Back out old fix.
        (RenderObject::remove):
        * khtml/rendering/render_object.h: Back out old fix. 

2006-08-14  Timothy Hatcher  <timothy@apple.com>

        Merged fix from Safari-2-0-branch to Safari-1-3-branch

    2006-07-28  Beth Dakin  <bdakin@apple.com>

        Rubber stamped by Maciej.

        Fix for <rdar://problem/4541255> Safari hangs at http://
        www.kutilek.de/safari-test/ somewhere from 
        WebCore::RenderBlock::layoutInlineChildren(bool)

        This is the same fix that Maciej and I did a week ago for 4529398. 
        Rolling it onto the branch because it fixes this crash too!

        * WebCore.xcodeproj/project.pbxproj: Project file wars.
        * khtml/rendering/render_list.cpp:
        (ListMarkerBox::detach): Remove from parent when detaching.
        (ListMarkerBox::operator delete):
        * khtml/rendering/render_list.h:

=== WebCore-315.14.5 ===

2006-07-11  Timothy Hatcher  <timothy@apple.com>

        Merged fix from Safari-2-0-branch to Safari-1-3-branch

    2006-07-06  Adele Peterson  <adele@apple.com>

        Reviewed by Tim Hatcher.

        - Speculative fix for <rdar://problem/4605532> unrepro crash at cnn.com after upgrading to 10.4.7 (but happening with $

        * khtml/khtmlview.cpp: (KHTMLView::layout): Ref's the view during layout, since a recalcStyle could cause the view to $
        If we get back from recalcStyle, and there's only one ref, return early since the the view will be deleted when we exi$
        * khtml/khtmlview.h: (KHTMLView::hasOneRef): Added.

=== WebCore-315.14.4 ===

2006-07-07  Timothy Hatcher  <timothy@apple.com>

        Merged fix from TOT to Safari-1-3-branch
        This fixes <rdar://problem/4600166> REGRESSION: Safari crash while loading web pages ( http://www.yahoo.com/ )

    2005-10-16  David Hyatt  <hyatt@apple.com>

        Clean up the deletion of anonymous boxes in the render tree.
        Renamed methods to make it more clear and also added comments.
       
        Reviewed by bdakin

        * khtml/rendering/render_container.cpp:
        (RenderContainer::detach): 
        this was renamed on the branch, from RenderContainer::destroy
        (RenderContainer::detachLeftoverChildren):
        this was renamed on the branch, from RenderContainer::destroyLeftoverChildren
        * khtml/rendering/render_container.h:
        * khtml/rendering/render_flow.cpp:
        (RenderFlow::detach):
        this was renamed on the branch, from RenderContainer::destroy

=== WebCore-315.14.3 ===

2006-06-21  Timothy Hatcher  <timothy@apple.com>

        Merged fix from TOT to Safari-2-0-branch
        This fixes <rdar://problem/4571273> WebCore crash in khtml::RenderObject::getAbsoluteRepaintRectWithOutline

    2005-10-21  Beth Dakin  <bdakin@apple.com>

        Reviewed by Hyatt

        Fix for <rdar://problem/3947202> certain sequence of DOM 
        method calls involving CSS outline and display crashes Safari 
        (in repaint code).

        * khtml/rendering/render_flow.cpp:
        (RenderFlow::destroy): Need to set m_continuation to 0 after it
        is destroyed to prevent possible crashes.

=== WebCore-315.14.2 ===

2006-04-17  Timothy Hatcher  <timothy@apple.com>

        Merged fix from TOT to Safari-1-3-branch

    2006-02-16  Tim Omernick  <timo@apple.com>

        Reviewed by Geoff.

        <rdar://problem/4428609> Flash Player 8.0.22 can crash Safari (and WebKit apps)
        with javascript disabled (7015)

        Added a test case, manual-tests/NPN_Invoke.  This is a skeleton of a Netscape
        plugin which uses NPN_Invoke() to call the window.alert() JavaScript function.
        
        * bridge/mac/MacFrame.mm:
        (WebCore::MacFrame::windowScriptNPObject):
        Removed the check Darin added to return 0 when JavaScript is disabled.
        This method cannot return 0, because plugins are not guaranteed to check
        for that.
        Removed my old fix for Radar 4428609 (7015) in favor of a better solution.
        Instead of creating a "dummy" JSObject to represent the window script object
        when JavaScript is disabled, we use the new JavaScriptCore bindings API to 
        create a "no script" NPObject.  This solution is better because it does not
        cause entry into any JavaScript interpreter code.

        * manual-tests/NPN_Invoke: Added.
        * manual-tests/NPN_Invoke/English.lproj: Added.
        * manual-tests/NPN_Invoke/English.lproj/Localized.r: Added.
        * manual-tests/NPN_Invoke/Info.plist: Added.
        * manual-tests/NPN_Invoke/NPN_Invoke.xcodeproj: Added.
        * manual-tests/NPN_Invoke/NPN_Invoke.xcodeproj/project.pbxproj: Added.
        * manual-tests/NPN_Invoke/main.c: Added.
        * manual-tests/NPN_Invoke/test.html: Added.

=== WebCore-315.14.1 ===

2006-01-05  Timothy Hatcher  <timothy@apple.com>

        Merged fix from TOT to Safari-1-3-branch

    2005-10-25  Beth Dakin  <bdakin@apple.com>

        Reviewed by Maciej

        Fix for <rdar://problem/4148730> SureSec si#182 safari heap overflow.
        When a table has a really huge rowSpan, Safari used to crash because
        the malloc of the grid for the table failed. This fix just checks for
        the success of the malloc.

        * khtml/rendering/render_table.cpp:
        (RenderTableSection::ensureRows): Return false if the grid resize is not 
        successful.
        (RenderTableSection::addCell): Return early if ensureRows() returned false.
        * khtml/rendering/render_table.h: Make ensureRows() return a bool instead
        of void.

=== WebCore-315.14 ===

2005-12-22  Vicki Murley  <vicki@apple.com>

        Reviewed by Eric.

        - fix <rdar://problem/4379899> *Panther* REGRESSION (TOT): Scrollwheel doesn't work on frameset pages (5450) 
	and <rdar://problem/4379906> *Pan EU2* 10.4.4 Regression: Seed: scrolling with scrollwheel, trackpad doesn't 
	work for nested framesets at gmail.com

        Basically plug in the TOT fixes for Panther.  Add passWheelEventToChildWidget, but add the event as a 
        parameter - since there's no concept of _currentEvent on the branch, we have to pass the event around.  
        Return true when passing the wheel event to the child widget, since we don't want to send the event on
        to the nextResponder for this case.
  
        * kwq/KWQKHTMLPart.h:
        * kwq/KWQKHTMLPart.mm:
        (KWQKHTMLPart::scrollOverflowWithScrollWheelEvent):
        (KWQKHTMLPart::passWheelEventToChildWidget):

2005-12-22  Timothy Hatcher  <timothy@apple.com>

        Merged fix from TOT to Safari-1-3-branch

    2005-12-21  Adele Peterson  <adele@apple.com>

        Reviewed by Tim Hatcher.

        Fix for <rdar://problem/4387433> Seed: Radio buttons behave incorrectly in Gmail settings

        * khtml/html/html_formimpl.cpp:
        (DOM::HTMLFormElementImpl::registerFormElement): If this form element is already checked in the default form, remove it from m_selectedRadioButtons and add it for the new form.

2005-12-22  Timothy Hatcher  <timothy@apple.com>

        Merged fix from TOT to Safari-1-3-branch

    2005-12-20  Adele Peterson  <adele@apple.com>

        Reviewed by Darin.

        Fix for <rdar://problem/4387630> REGRESSION: <select> element's onClick event doesn't fire @ bugweb.apple.com

        * kwq/KWQKHTMLPart.mm:
        (KWQKHTMLPart::passSubframeEventToSubframe): only pass mouse down for khtmlviews.

== Rolled over to ChangeLog-2005-12-19 ==

